{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\youyo\\\\Documents\\\\GitHub\\\\react-pixel-art\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\youyo\\\\Documents\\\\GitHub\\\\react-pixel-art\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport \"../styles/login.css\";\n\nasync function callServer() {\n  const res = await axios.get(\"http://localhost:\".concat(process.env.REACT_APP_SERVER_PORT, \"/get\"), {\n    params: {\n      table: 'account'\n    }\n  }).then(response => {\n    console.log(response.data);\n  });\n  return res.data;\n}\n\nexport default function Login(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errorMessages = _useState2[0],\n        setErrorMessages = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitted = _useState4[0],\n        setIsSubmitted = _useState4[1];\n\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var _document$forms$ = document.forms[0],\n        uname = _document$forms$.uname,\n        pass = _document$forms$.pass; // Find user login info\n\n    const userData = callServer; // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, errorMessages.message); // JSX code for login form\n\n\n  const renderForm = React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Username \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"uname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), renderErrorMessage(\"uname\")), React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Password \"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"pass\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), renderErrorMessage(\"pass\")), React.createElement(\"div\", {\n    className: \"button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Sign In\"), isSubmitted ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"User is successfully logged in\") : renderForm));\n}","map":{"version":3,"sources":["C:\\Users\\youyo\\Documents\\GitHub\\react-pixel-art\\client\\src\\components\\Login.js"],"names":["React","useState","ReactDOM","axios","callServer","res","get","process","env","REACT_APP_SERVER_PORT","params","table","then","response","console","log","data","Login","props","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","password","value","name","message","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from 'axios';\r\nimport \"../styles/login.css\"; \r\n\r\n\r\nasync function callServer() {\r\n    const res = await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/get`, {\r\n      params: {\r\n        table: 'account',\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n    return res.data;\r\n  }\r\n\r\nexport default function Login(props) {\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n        // Find user login info\r\n        const userData = callServer;\r\n\r\n        // Compare user info\r\n        if (userData) {\r\n            if (userData.password !== pass.value) {\r\n                // Invalid password\r\n                setErrorMessages({ name: \"pass\", message: errors.pass });\r\n            } else {\r\n                setIsSubmitted(true);\r\n            }\r\n        } else {\r\n            // Username not found\r\n            setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}