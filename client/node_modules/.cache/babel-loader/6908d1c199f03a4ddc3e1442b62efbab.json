{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\youyo\\\\Documents\\\\GitHub\\\\react-pixel-art\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\youyo\\\\Documents\\\\GitHub\\\\react-pixel-art\\\\client\\\\src\\\\components\\\\Editor.js\";\nimport React, { useState } from \"react\";\nimport \"../styles/editor.css\";\nimport { CirclePicker } from \"react-color\";\nimport DrawingPanel from \"./DrawingPanel\";\nimport { Link } from \"react-router-dom\";\nexport default function Editor() {\n  const _useState = useState(16),\n        _useState2 = _slicedToArray(_useState, 2),\n        panelWidth = _useState2[0],\n        setPanelWidth = _useState2[1];\n\n  const _useState3 = useState(16),\n        _useState4 = _slicedToArray(_useState3, 2),\n        panelHeight = _useState4[0],\n        setPanelHeight = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hideOptions = _useState6[0],\n        setHideOptions = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        hideDrawingPanel = _useState8[0],\n        setHideDrawingPanel = _useState8[1];\n\n  const _useState9 = useState(\"start drawing\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        buttonText = _useState10[0],\n        setButtonText = _useState10[1];\n\n  const _useState11 = useState(\"#f44336\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selectedColor = _useState12[0],\n        setColor = _useState12[1];\n\n  function initializeDrawingPanel() {\n    setHideOptions(!hideOptions);\n    setHideDrawingPanel(!hideDrawingPanel);\n    buttonText === \"start drawing\" ? setButtonText(\"reset\") : setButtonText(\"start drawing\");\n  }\n\n  function changeColor(color) {\n    setColor(color.hex);\n  }\n\n  return React.createElement(\"div\", {\n    id: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Pixel Editor\"), hideDrawingPanel && React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Enter Panel Dimensions\"), hideDrawingPanel && React.createElement(\"div\", {\n    id: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    className: \"panelInput\",\n    defaultValue: panelWidth,\n    onChange: e => {\n      setPanelWidth(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Width\")), React.createElement(\"div\", {\n    className: \"option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    className: \"panelInput\",\n    defaultValue: panelHeight,\n    onChange: e => {\n      setPanelHeight(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Height\"))), React.createElement(Link, {\n    to: \"/pixelArt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: initializeDrawingPanel,\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, buttonText)), hideOptions && React.createElement(CirclePicker, {\n    color: selectedColor,\n    onChangeComplete: changeColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), hideOptions && React.createElement(DrawingPanel, {\n    width: panelWidth,\n    height: panelHeight,\n    selectedColor: selectedColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\youyo\\Documents\\GitHub\\react-pixel-art\\client\\src\\components\\Editor.js"],"names":["React","useState","CirclePicker","DrawingPanel","Link","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","hideDrawingPanel","setHideDrawingPanel","buttonText","setButtonText","selectedColor","setColor","initializeDrawingPanel","changeColor","color","hex","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/editor.css\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport DrawingPanel from \"./DrawingPanel\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Editor() {\r\n  const [panelWidth, setPanelWidth] = useState(16);\r\n  const [panelHeight, setPanelHeight] = useState(16);\r\n  const [hideOptions, setHideOptions] = useState(false);\r\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\r\n  const [buttonText, setButtonText] = useState(\"start drawing\");\r\n  const [selectedColor, setColor] = useState(\"#f44336\");\r\n\r\n  function initializeDrawingPanel() {\r\n    setHideOptions(!hideOptions);\r\n    setHideDrawingPanel(!hideDrawingPanel);\r\n\r\n    buttonText === \"start drawing\"\r\n      ? setButtonText(\"reset\")\r\n      : setButtonText(\"start drawing\");\r\n  }\r\n\r\n  function changeColor(color) {\r\n    setColor(color.hex);\r\n  }\r\n\r\n  return (\r\n    <div id=\"editor\">\r\n      <h1>Pixel Editor</h1>\r\n      {hideDrawingPanel && <h2>Enter Panel Dimensions</h2>}\r\n      {hideDrawingPanel && (\r\n        <div id=\"options\">\r\n          <div className=\"option\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"panelInput\"\r\n              defaultValue={panelWidth}\r\n              onChange={(e) => {\r\n                setPanelWidth(e.target.value);\r\n              }}\r\n            />\r\n            <span>Width</span>\r\n          </div>\r\n          <div className=\"option\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"panelInput\"\r\n              defaultValue={panelHeight}\r\n              onChange={(e) => {\r\n                setPanelHeight(e.target.value);\r\n              }}\r\n            />\r\n            <span>Height</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/pixelArt\">\r\n      <button onClick={initializeDrawingPanel} className=\"button\">\r\n        {buttonText}\r\n      </button>\r\n      </Link>\r\n      {hideOptions && (\r\n        <CirclePicker color={selectedColor} onChangeComplete={changeColor} />\r\n      )}\r\n\r\n      {hideOptions && (\r\n        <DrawingPanel\r\n          width={panelWidth}\r\n          height={panelHeight}\r\n          selectedColor={selectedColor}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}